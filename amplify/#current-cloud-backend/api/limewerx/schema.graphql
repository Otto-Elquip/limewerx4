type ReferenceData @model @auth(rules: [{allow: public}]) {
  id: ID!
  AccountOwnerCd: String
}

type UploadFile @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  FileName: String
  UploadedBy: String
  deviceID: ID! @index(name: "byDevice")
  isDeleted: Boolean
}

type Account @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  CognitoUserName: String!
  AccountName: String!
  EmailAddr: String!
  AuthLvl: Int!
  BusinessName: String
  Devices: [Device] @hasMany(indexName: "byAccount", fields: ["id"])
}

type Alert @model @auth(rules: [{allow: private}, {allow: public}]) {
  id: ID!
  type: String!
  title: String!
  period: String!
  isDisplayed: Boolean!
  signal: String!
  condition: String!
  threshold: String!
  deviceID: ID! @index(name: "byDevice")
}

type Chart @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  type: String!
  title: String!
  period: String!
  isDisplayed: Boolean!
  signal: String!
  CSSId: String!
  filter: String!
}

type Card @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  CSSId: String!
  type: String!
  title: String!
  period: String!
  isDisplayed: Boolean!
  signal: String
  unit: String
}

type Post @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  name: String!
  description: String
  devices: [String!]
}

type CanData @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  deviceID: String!
  Signal: String!
  PhysicalValue: String!
}

type Device @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  CSSId: String!
  Location: String
  Vehicle: String
  isAcive: Boolean!
  DateActivated: String!
  Alerts: [UploadFile] @hasMany(indexName: "byDevice", fields: ["id"])
  accountID: ID! @index(name: "byAccount")
  UploadFiles: [UploadFile] @hasMany(indexName: "byDevice", fields: ["id"])
}
 